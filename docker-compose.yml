services:
  app:
    build: .
    ports:
      - "8004:8004"
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT}

      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_TOPIC_FOR_AI_HANDLER=${KAFKA_TOPIC_FOR_AI_HANDLER}
      - KAFKA_TOPIC_FOR_NOTIFICATIONS=${KAFKA_TOPIC_FOR_NOTIFICATIONS}

      - MODE=${MODE}
    depends_on:
      kafka:
        condition: service_started
    restart: unless-stopped  # Автоперезапуск при падении

  redis:
    image: redis:7
    command: redis-server --save 60 1 --loglevel warning  # Настройки Redis
    volumes:
      - redis_data:/data  # Сохраняем данные Redis
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5

  zookeeper:
    image: bitnami/zookeeper:3.9
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka:3.6
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

volumes:
  postgres_data:  # Том для PostgreSQL
  redis_data:     # Том для Redis
